worker_processes 1;

error_log /dev/stdout info;

# 必須の events セクション
events {
    worker_connections 1024;
}

http {
    lua_shared_dict redis_cache 10m;
    resolver 127.0.0.11;

    server {
        listen 80;

        location / {
            # 事前に$target変数を定義
            set $target "";

            # Luaスクリプトで振り分け先を取得してプロキシ設定
            access_by_lua_block {
                local redis = require "resty.redis"
                local cache = ngx.shared.redis_cache

                -- ヘッダからIDを取得
                local id = ngx.req.get_headers()["ID"]
                if not id then
                    ngx.log(ngx.ERR, "id header is missing")
                    return ngx.exit(ngx.HTTP_BAD_REQUEST)
                end

                -- キャッシュからデータを取得
                local cached_value = cache:get(id)
                if cached_value then
                    ngx.log(ngx.INFO, "Cache hit: ", cached_value)
                    ngx.var.target = cached_value
                    return
                end

                local red = redis:new()

                -- Redis接続設定
                red:set_timeout(1000)  -- タイムアウト設定 (ms)
                local ok, err = red:connect("redis", 6379)
                if not ok then
                    ngx.log(ngx.ERR, "failed to connect to Redis: ", err)
                    return ngx.exit(ngx.HTTP_SERVICE_UNAVAILABLE)
                end

                ngx.log(ngx.INFO, "Redis access ok")

                -- Redisでidに対応する振り分け先を取得
                local target, err = red:get(id)
                if not target or target == ngx.null then
                    ngx.log(ngx.ERR, "Target not found for id: ", id)
                    return ngx.exit(ngx.HTTP_NOT_FOUND)
                end

                cache:set(id, target)

                -- 振り分け先の設定
                ngx.var.target = target

                -- Redis接続を閉じる
                local ok, err = red:set_keepalive(10000, 100)
                if not ok then
                    ngx.log(ngx.ERR, "failed to set keepalive: ", err)
                end
            }

            # 振り分け先を動的に設定するプロキシ
            proxy_pass http://$target;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
